practice site - https://react-course-comfy-sloth-store.netlify.app/

General Workflow

Frontend Data Request:
The frontend constructs a request by appending a path and optional query parameters to the URL, 
forming the endpoint for data retrieval or submission.

Request to Backend API:
The constructed request is sent to an endpoint on an actively running server, typically through 
HTTP requests.

Backend API Handling:
Upon receiving the request, the backend API processes it based on defined routes and methods.

Middleware Processing:
The request may pass through various middleware for processing, such as authentication, authorization, 
validation, and other custom business logic.

Database Interaction:
If dynamic data retrieval is necessary, the backend interacts with a database or external services 
to obtain the required data.

Response Generation:
After processing the request and possibly retrieving data from the database, the backend generates 
a response. Responses are often in the form of JSON data, but they can also include other data formats.

Sending Response to Frontend:
The generated response, containing the data requested or the result of the operation, is sent back to 
the frontend from the backend server.

Frontend Processing:
Upon receiving the response, the front end processes the JSON data and updates the user interface 
accordingly. This can involve rendering the retrieved data dynamically on the webpage.

when building an API it's best to follow -
1. request to backend API

2. routing - directs the request to the appropriate route based on the endpoint and HTTP method.

3. controller - 
    contains the logic for receiving and sending back responses by further processing 
    the via services, note :- never make database calls inside of a controller.

4. service - 
    The controller delegates the business logic and data manipulation to a service layer. 
    The service layer encapsulates the application's business logic and acts as an intermediary 
    between the controller and the database.

5. model/data layer - 
    The service layer interacts with the database through a model. The model defines the schema 
    and data structure of the database. The model also contains methods for querying the database 
    and manipulating data.

6. database interaction -
    Within the service layer, if necessary, database calls are made to retrieve or manipulate data 
    from the database. This interaction involves querying the database based on the defined data models 
    and schema.

7. Response cycle -
    Upon receiving the data from the database, the service layer processes and manipulates it according 
    to the defined business logic. The service layer returns the processed data as a response to the 
    controller. The controller receives the response from the service layer and prepares it for the 
    appropriate format, often in the form of a JSON response. The controller sends the appropriately 
    formatted response back to the front end as part of the HTTP response.
